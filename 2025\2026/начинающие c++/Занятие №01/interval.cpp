/*
Условие задачи

Интервалом считается набор числел одновременно больше заданного начала и меньше заданного конца
--!:::!-->
0 1 2 3 4
Интервал обозначается (1,3) - начинающийся в 1 и заканчивающийся в 3
Подразумевается, что начало меньше конца.
Интервалы пересекаются если они имеют общие значения.(Для простоты: начало или конец одного входит в другой)

Пользователь вводит начало и конец для двух интервалов. Определить пересекаются ли они.
*/

//Подключаем ввод/вывод с консоли
#include <iostream>
//Убираем лишние std:: у всех операторов
using namespace std;

//Основная часть программы - функция main
int main(){
	int i1_begin, i1_end, i2_begin, i2_end;
/*
Первый интервал(interval 1 -> i1): начало - i1_begin, конец - i1_end
Второй интервал(interval 2 -> i2): начало - i2_begin, конец - i2_end
*/
//#Если интервал задан корректно, его начало меньше конца, проверяем наши значения:

	if(i1_begin > i1_end){
		//Меняем местами если некорректно
		swap(i1_begin, i1_end);
	}
	if(i2_begin > i2_end){
		swap(i2_begin, i2_end);
	}
/*
Нужно проверить что конец первого интервала лежит после начала второго
Это работает только в случаях когда превый и второй интервал лежат по порядку нумерации
Оператор if может одновременно проверять несколько условий, если они логически связаны, в нашем случае логическое И(and) 
*/
	if(i1_end > i2_begin and i1_begin < i2_end){
		cout << "intersect";
	else:
		cout << "do not intersect";
	
	//Пока обязательное выражение возврата значения для всех функций(main является исключением и не требует этого выражения)
	return 0;
}
